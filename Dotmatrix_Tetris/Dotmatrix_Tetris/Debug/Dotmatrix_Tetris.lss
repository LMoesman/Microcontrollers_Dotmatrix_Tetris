
Dotmatrix_Tetris.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  0000094a  000009de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000094a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800150  00800150  00000a2e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a2e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a8c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  00000ac8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fd6  00000000  00000000  00000b98  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a8a  00000000  00000000  00001b6e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a5d  00000000  00000000  000025f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000214  00000000  00000000  00003058  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000a1af  00000000  00000000  0000326c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000556  00000000  00000000  0000d41b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  0000d971  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00003067  00000000  00000000  0000da21  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea e4       	ldi	r30, 0x4A	; 74
  a0:	f9 e0       	ldi	r31, 0x09	; 9
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 35       	cpi	r26, 0x50	; 80
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a0 e5       	ldi	r26, 0x50	; 80
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a6 35       	cpi	r26, 0x56	; 86
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	7b d1       	rcall	.+758    	; 0x3ba <main>
  c4:	40 c4       	rjmp	.+2176   	; 0x946 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <twi_init>:
  c8:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
  cc:	80 e2       	ldi	r24, 0x20	; 32
  ce:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
  d2:	08 95       	ret

000000d4 <twi_start>:
  d4:	84 ea       	ldi	r24, 0xA4	; 164
  d6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
  da:	e4 e7       	ldi	r30, 0x74	; 116
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	80 81       	ld	r24, Z
  e0:	88 23       	and	r24, r24
  e2:	ec f7       	brge	.-6      	; 0xde <twi_start+0xa>
  e4:	08 95       	ret

000000e6 <twi_tx>:
  e6:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
  ea:	84 e8       	ldi	r24, 0x84	; 132
  ec:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
  f0:	e4 e7       	ldi	r30, 0x74	; 116
  f2:	f0 e0       	ldi	r31, 0x00	; 0
  f4:	80 81       	ld	r24, Z
  f6:	88 23       	and	r24, r24
  f8:	ec f7       	brge	.-6      	; 0xf4 <twi_tx+0xe>
  fa:	08 95       	ret

000000fc <drawArray>:
  fc:	0f 93       	push	r16
  fe:	1f 93       	push	r17
 100:	cf 93       	push	r28
 102:	df 93       	push	r29
 104:	8c 01       	movw	r16, r24
 106:	e6 df       	rcall	.-52     	; 0xd4 <twi_start>
 108:	80 ee       	ldi	r24, 0xE0	; 224
 10a:	ed df       	rcall	.-38     	; 0xe6 <twi_tx>
 10c:	80 e0       	ldi	r24, 0x00	; 0
 10e:	eb df       	rcall	.-42     	; 0xe6 <twi_tx>
 110:	e8 01       	movw	r28, r16
 112:	08 5f       	subi	r16, 0xF8	; 248
 114:	1f 4f       	sbci	r17, 0xFF	; 255
 116:	89 91       	ld	r24, Y+
 118:	80 fb       	bst	r24, 0
 11a:	87 95       	ror	r24
 11c:	87 f9       	bld	r24, 7
 11e:	e3 df       	rcall	.-58     	; 0xe6 <twi_tx>
 120:	80 e0       	ldi	r24, 0x00	; 0
 122:	e1 df       	rcall	.-62     	; 0xe6 <twi_tx>
 124:	c0 17       	cp	r28, r16
 126:	d1 07       	cpc	r29, r17
 128:	b1 f7       	brne	.-20     	; 0x116 <drawArray+0x1a>
 12a:	84 e9       	ldi	r24, 0x94	; 148
 12c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 130:	df 91       	pop	r29
 132:	cf 91       	pop	r28
 134:	1f 91       	pop	r17
 136:	0f 91       	pop	r16
 138:	08 95       	ret

0000013a <displayInitHT16K33>:
 13a:	0f 93       	push	r16
 13c:	1f 93       	push	r17
 13e:	cf 93       	push	r28
 140:	df 93       	push	r29
 142:	08 2f       	mov	r16, r24
 144:	c7 df       	rcall	.-114    	; 0xd4 <twi_start>
 146:	80 2f       	mov	r24, r16
 148:	ce df       	rcall	.-100    	; 0xe6 <twi_tx>
 14a:	81 e2       	ldi	r24, 0x21	; 33
 14c:	cc df       	rcall	.-104    	; 0xe6 <twi_tx>
 14e:	c4 e7       	ldi	r28, 0x74	; 116
 150:	d0 e0       	ldi	r29, 0x00	; 0
 152:	14 e9       	ldi	r17, 0x94	; 148
 154:	18 83       	st	Y, r17
 156:	be df       	rcall	.-132    	; 0xd4 <twi_start>
 158:	80 2f       	mov	r24, r16
 15a:	c5 df       	rcall	.-118    	; 0xe6 <twi_tx>
 15c:	80 ea       	ldi	r24, 0xA0	; 160
 15e:	c3 df       	rcall	.-122    	; 0xe6 <twi_tx>
 160:	18 83       	st	Y, r17
 162:	b8 df       	rcall	.-144    	; 0xd4 <twi_start>
 164:	80 2f       	mov	r24, r16
 166:	bf df       	rcall	.-130    	; 0xe6 <twi_tx>
 168:	81 ee       	ldi	r24, 0xE1	; 225
 16a:	bd df       	rcall	.-134    	; 0xe6 <twi_tx>
 16c:	18 83       	st	Y, r17
 16e:	b2 df       	rcall	.-156    	; 0xd4 <twi_start>
 170:	80 2f       	mov	r24, r16
 172:	b9 df       	rcall	.-142    	; 0xe6 <twi_tx>
 174:	81 e8       	ldi	r24, 0x81	; 129
 176:	b7 df       	rcall	.-146    	; 0xe6 <twi_tx>
 178:	18 83       	st	Y, r17
 17a:	df 91       	pop	r29
 17c:	cf 91       	pop	r28
 17e:	1f 91       	pop	r17
 180:	0f 91       	pop	r16
 182:	08 95       	ret

00000184 <displayInit>:
 184:	a1 df       	rcall	.-190    	; 0xc8 <twi_init>
 186:	80 ee       	ldi	r24, 0xE0	; 224
 188:	d8 cf       	rjmp	.-80     	; 0x13a <displayInitHT16K33>
 18a:	08 95       	ret

0000018c <wait>:
				clock value is set. This is used by _delay_ms inside
				util/delay.h
Version :    	DMK, Initial code
*******************************************************************/
{
	for (int i=0; i<ms; i++)
 18c:	18 16       	cp	r1, r24
 18e:	19 06       	cpc	r1, r25
 190:	6c f4       	brge	.+26     	; 0x1ac <wait+0x20>
 192:	20 e0       	ldi	r18, 0x00	; 0
 194:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 196:	e9 ef       	ldi	r30, 0xF9	; 249
 198:	f0 e0       	ldi	r31, 0x00	; 0
 19a:	31 97       	sbiw	r30, 0x01	; 1
 19c:	f1 f7       	brne	.-4      	; 0x19a <wait+0xe>
 19e:	00 c0       	rjmp	.+0      	; 0x1a0 <wait+0x14>
 1a0:	00 00       	nop
 1a2:	2f 5f       	subi	r18, 0xFF	; 255
 1a4:	3f 4f       	sbci	r19, 0xFF	; 255
 1a6:	82 17       	cp	r24, r18
 1a8:	93 07       	cpc	r25, r19
 1aa:	a9 f7       	brne	.-22     	; 0x196 <wait+0xa>
 1ac:	08 95       	ret

000001ae <setupDisplayArray>:
	{
		_delay_ms( 1 );		// library function (max 30 ms at 8MHz)
	}
}

void setupDisplayArray(unsigned char* displayBuffer){
 1ae:	3f 92       	push	r3
 1b0:	4f 92       	push	r4
 1b2:	5f 92       	push	r5
 1b4:	6f 92       	push	r6
 1b6:	7f 92       	push	r7
 1b8:	8f 92       	push	r8
 1ba:	9f 92       	push	r9
 1bc:	af 92       	push	r10
 1be:	bf 92       	push	r11
 1c0:	cf 92       	push	r12
 1c2:	df 92       	push	r13
 1c4:	ef 92       	push	r14
 1c6:	ff 92       	push	r15
 1c8:	0f 93       	push	r16
 1ca:	1f 93       	push	r17
 1cc:	cf 93       	push	r28
 1ce:	df 93       	push	r29
 1d0:	3c 01       	movw	r6, r24
 1d2:	0f 2e       	mov	r0, r31
 1d4:	f4 e0       	ldi	r31, 0x04	; 4
 1d6:	cf 2e       	mov	r12, r31
 1d8:	f1 e0       	ldi	r31, 0x01	; 1
 1da:	df 2e       	mov	r13, r31
 1dc:	f0 2d       	mov	r31, r0
	int count;
	for(count = 0; count < 8; count++) {
 1de:	e1 2c       	mov	r14, r1
 1e0:	f1 2c       	mov	r15, r1
		int col;
		unsigned char tempValue = 0b00000000;
		for(col = 0; col < 8; col++) {
			if (count == row || count == (row - 1)) {
				if(col == column || col == column + 1) {
					tempValue = tempValue | (1 << col);
 1e2:	aa 24       	eor	r10, r10
 1e4:	a3 94       	inc	r10
 1e6:	b1 2c       	mov	r11, r1
					printf("ggg");
 1e8:	0f 2e       	mov	r0, r31
 1ea:	fc e4       	ldi	r31, 0x4C	; 76
 1ec:	4f 2e       	mov	r4, r31
 1ee:	f1 e0       	ldi	r31, 0x01	; 1
 1f0:	5f 2e       	mov	r5, r31
 1f2:	f0 2d       	mov	r31, r0
				}
			}
			tempValue = tempValue | ((6 - display_array[count][col]) << col);
 1f4:	0f 2e       	mov	r0, r31
 1f6:	f6 e0       	ldi	r31, 0x06	; 6
 1f8:	8f 2e       	mov	r8, r31
 1fa:	91 2c       	mov	r9, r1
 1fc:	f0 2d       	mov	r31, r0
 1fe:	42 c0       	rjmp	.+132    	; 0x284 <setupDisplayArray+0xd6>
	int count;
	for(count = 0; count < 8; count++) {
		int col;
		unsigned char tempValue = 0b00000000;
		for(col = 0; col < 8; col++) {
			if (count == row || count == (row - 1)) {
 200:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <row>
 204:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <row+0x1>
 208:	8e 15       	cp	r24, r14
 20a:	9f 05       	cpc	r25, r15
 20c:	21 f0       	breq	.+8      	; 0x216 <setupDisplayArray+0x68>
 20e:	01 97       	sbiw	r24, 0x01	; 1
 210:	8e 15       	cp	r24, r14
 212:	9f 05       	cpc	r25, r15
 214:	c1 f4       	brne	.+48     	; 0x246 <setupDisplayArray+0x98>
				if(col == column || col == column + 1) {
 216:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 21a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 21e:	8c 17       	cp	r24, r28
 220:	9d 07       	cpc	r25, r29
 222:	21 f0       	breq	.+8      	; 0x22c <setupDisplayArray+0x7e>
 224:	01 96       	adiw	r24, 0x01	; 1
 226:	8c 17       	cp	r24, r28
 228:	9d 07       	cpc	r25, r29
 22a:	69 f4       	brne	.+26     	; 0x246 <setupDisplayArray+0x98>
					tempValue = tempValue | (1 << col);
 22c:	c5 01       	movw	r24, r10
 22e:	0c 2e       	mov	r0, r28
 230:	02 c0       	rjmp	.+4      	; 0x236 <setupDisplayArray+0x88>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	0a 94       	dec	r0
 238:	e2 f7       	brpl	.-8      	; 0x232 <setupDisplayArray+0x84>
 23a:	38 2a       	or	r3, r24
					printf("ggg");
 23c:	5f 92       	push	r5
 23e:	4f 92       	push	r4
 240:	c2 d0       	rcall	.+388    	; 0x3c6 <printf>
 242:	0f 90       	pop	r0
 244:	0f 90       	pop	r0
				}
			}
			tempValue = tempValue | ((6 - display_array[count][col]) << col);
 246:	f8 01       	movw	r30, r16
 248:	81 91       	ld	r24, Z+
 24a:	8f 01       	movw	r16, r30
 24c:	94 01       	movw	r18, r8
 24e:	28 1b       	sub	r18, r24
 250:	31 09       	sbc	r19, r1
 252:	c9 01       	movw	r24, r18
 254:	0c 2e       	mov	r0, r28
 256:	02 c0       	rjmp	.+4      	; 0x25c <setupDisplayArray+0xae>
 258:	88 0f       	add	r24, r24
 25a:	99 1f       	adc	r25, r25
 25c:	0a 94       	dec	r0
 25e:	e2 f7       	brpl	.-8      	; 0x258 <setupDisplayArray+0xaa>
 260:	38 2a       	or	r3, r24
void setupDisplayArray(unsigned char* displayBuffer){
	int count;
	for(count = 0; count < 8; count++) {
		int col;
		unsigned char tempValue = 0b00000000;
		for(col = 0; col < 8; col++) {
 262:	21 96       	adiw	r28, 0x01	; 1
 264:	c8 30       	cpi	r28, 0x08	; 8
 266:	d1 05       	cpc	r29, r1
 268:	59 f6       	brne	.-106    	; 0x200 <setupDisplayArray+0x52>
					printf("ggg");
				}
			}
			tempValue = tempValue | ((6 - display_array[count][col]) << col);
		}
		displayBuffer[count] = tempValue; 
 26a:	f3 01       	movw	r30, r6
 26c:	31 92       	st	Z+, r3
 26e:	3f 01       	movw	r6, r30
	}
}

void setupDisplayArray(unsigned char* displayBuffer){
	int count;
	for(count = 0; count < 8; count++) {
 270:	ff ef       	ldi	r31, 0xFF	; 255
 272:	ef 1a       	sub	r14, r31
 274:	ff 0a       	sbc	r15, r31
 276:	28 e0       	ldi	r18, 0x08	; 8
 278:	c2 0e       	add	r12, r18
 27a:	d1 1c       	adc	r13, r1
 27c:	38 e0       	ldi	r19, 0x08	; 8
 27e:	e3 16       	cp	r14, r19
 280:	f1 04       	cpc	r15, r1
 282:	29 f0       	breq	.+10     	; 0x28e <setupDisplayArray+0xe0>
	{
		_delay_ms( 1 );		// library function (max 30 ms at 8MHz)
	}
}

void setupDisplayArray(unsigned char* displayBuffer){
 284:	86 01       	movw	r16, r12
 286:	31 2c       	mov	r3, r1
 288:	c0 e0       	ldi	r28, 0x00	; 0
 28a:	d0 e0       	ldi	r29, 0x00	; 0
 28c:	b9 cf       	rjmp	.-142    	; 0x200 <setupDisplayArray+0x52>
			}
			tempValue = tempValue | ((6 - display_array[count][col]) << col);
		}
		displayBuffer[count] = tempValue; 
	}
}
 28e:	df 91       	pop	r29
 290:	cf 91       	pop	r28
 292:	1f 91       	pop	r17
 294:	0f 91       	pop	r16
 296:	ff 90       	pop	r15
 298:	ef 90       	pop	r14
 29a:	df 90       	pop	r13
 29c:	cf 90       	pop	r12
 29e:	bf 90       	pop	r11
 2a0:	af 90       	pop	r10
 2a2:	9f 90       	pop	r9
 2a4:	8f 90       	pop	r8
 2a6:	7f 90       	pop	r7
 2a8:	6f 90       	pop	r6
 2aa:	5f 90       	pop	r5
 2ac:	4f 90       	pop	r4
 2ae:	3f 90       	pop	r3
 2b0:	08 95       	ret

000002b2 <animateGame>:
	row = 1;
	column = 3;
	animateGame();
}

void animateGame() {
 2b2:	cf 93       	push	r28
 2b4:	df 93       	push	r29
 2b6:	cd b7       	in	r28, 0x3d	; 61
 2b8:	de b7       	in	r29, 0x3e	; 62
 2ba:	28 97       	sbiw	r28, 0x08	; 8
 2bc:	0f b6       	in	r0, 0x3f	; 63
 2be:	f8 94       	cli
 2c0:	de bf       	out	0x3e, r29	; 62
 2c2:	0f be       	out	0x3f, r0	; 63
 2c4:	cd bf       	out	0x3d, r28	; 61
	unsigned char displayBuffer[8];
	while(1) {
		if (display_array[row+1][column] != 1) {
 2c6:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <row>
 2ca:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <row+0x1>
 2ce:	c9 01       	movw	r24, r18
 2d0:	01 96       	adiw	r24, 0x01	; 1
 2d2:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
 2d6:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
 2da:	fc 01       	movw	r30, r24
 2dc:	ee 0f       	add	r30, r30
 2de:	ff 1f       	adc	r31, r31
 2e0:	ee 0f       	add	r30, r30
 2e2:	ff 1f       	adc	r31, r31
 2e4:	ee 0f       	add	r30, r30
 2e6:	ff 1f       	adc	r31, r31
 2e8:	ec 5f       	subi	r30, 0xFC	; 252
 2ea:	fe 4f       	sbci	r31, 0xFE	; 254
 2ec:	e4 0f       	add	r30, r20
 2ee:	f5 1f       	adc	r31, r21
 2f0:	60 81       	ld	r22, Z
 2f2:	61 30       	cpi	r22, 0x01	; 1
 2f4:	29 f1       	breq	.+74     	; 0x340 <animateGame+0x8e>
			row++;
 2f6:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <row+0x1>
 2fa:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <row>
		}else {
			break;
		}
		setupDisplayArray(displayBuffer);
 2fe:	ce 01       	movw	r24, r28
 300:	01 96       	adiw	r24, 0x01	; 1
 302:	55 df       	rcall	.-342    	; 0x1ae <setupDisplayArray>
		drawArray(displayBuffer);
 304:	ce 01       	movw	r24, r28
 306:	01 96       	adiw	r24, 0x01	; 1
 308:	f9 de       	rcall	.-526    	; 0xfc <drawArray>
		wait(1000);
 30a:	88 ee       	ldi	r24, 0xE8	; 232
 30c:	93 e0       	ldi	r25, 0x03	; 3
 30e:	3e df       	rcall	.-388    	; 0x18c <wait>
}

void animateGame() {
	unsigned char displayBuffer[8];
	while(1) {
		if (display_array[row+1][column] != 1) {
 310:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <row>
 314:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <row+0x1>
 318:	c9 01       	movw	r24, r18
 31a:	01 96       	adiw	r24, 0x01	; 1
 31c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
 320:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
 324:	fc 01       	movw	r30, r24
 326:	ee 0f       	add	r30, r30
 328:	ff 1f       	adc	r31, r31
 32a:	ee 0f       	add	r30, r30
 32c:	ff 1f       	adc	r31, r31
 32e:	ee 0f       	add	r30, r30
 330:	ff 1f       	adc	r31, r31
 332:	ec 5f       	subi	r30, 0xFC	; 252
 334:	fe 4f       	sbci	r31, 0xFE	; 254
 336:	e4 0f       	add	r30, r20
 338:	f5 1f       	adc	r31, r21
 33a:	60 81       	ld	r22, Z
 33c:	61 30       	cpi	r22, 0x01	; 1
 33e:	d9 f6       	brne	.-74     	; 0x2f6 <animateGame+0x44>
		}
		setupDisplayArray(displayBuffer);
		drawArray(displayBuffer);
		wait(1000);
	}
	display_array[row - 1][column] = 1;
 340:	c9 01       	movw	r24, r18
 342:	88 0f       	add	r24, r24
 344:	99 1f       	adc	r25, r25
 346:	88 0f       	add	r24, r24
 348:	99 1f       	adc	r25, r25
 34a:	88 0f       	add	r24, r24
 34c:	99 1f       	adc	r25, r25
 34e:	84 50       	subi	r24, 0x04	; 4
 350:	9f 4f       	sbci	r25, 0xFF	; 255
 352:	dc 01       	movw	r26, r24
 354:	a4 0f       	add	r26, r20
 356:	b5 1f       	adc	r27, r21
 358:	e1 e0       	ldi	r30, 0x01	; 1
 35a:	ec 93       	st	X, r30
	display_array[row - 1][column + 1] = 1;
 35c:	ba 01       	movw	r22, r20
 35e:	6f 5f       	subi	r22, 0xFF	; 255
 360:	7f 4f       	sbci	r23, 0xFF	; 255
 362:	dc 01       	movw	r26, r24
 364:	a6 0f       	add	r26, r22
 366:	b7 1f       	adc	r27, r23
 368:	ec 93       	st	X, r30
	display_array[row][column] = 1;
 36a:	22 0f       	add	r18, r18
 36c:	33 1f       	adc	r19, r19
 36e:	22 0f       	add	r18, r18
 370:	33 1f       	adc	r19, r19
 372:	22 0f       	add	r18, r18
 374:	33 1f       	adc	r19, r19
 376:	2c 5f       	subi	r18, 0xFC	; 252
 378:	3e 4f       	sbci	r19, 0xFE	; 254
 37a:	d9 01       	movw	r26, r18
 37c:	a4 0f       	add	r26, r20
 37e:	b5 1f       	adc	r27, r21
 380:	ec 93       	st	X, r30
	display_array[row][column + 1] = 1;
 382:	d9 01       	movw	r26, r18
 384:	a6 0f       	add	r26, r22
 386:	b7 1f       	adc	r27, r23
	startGame();
 388:	ec 93       	st	X, r30
 38a:	09 d0       	rcall	.+18     	; 0x39e <startGame>

}
 38c:	28 96       	adiw	r28, 0x08	; 8
 38e:	0f b6       	in	r0, 0x3f	; 63
 390:	f8 94       	cli
 392:	de bf       	out	0x3e, r29	; 62
 394:	0f be       	out	0x3f, r0	; 63
 396:	cd bf       	out	0x3d, r28	; 61
 398:	df 91       	pop	r29
 39a:	cf 91       	pop	r28
 39c:	08 95       	ret

0000039e <startGame>:
		}
		displayBuffer[count] = tempValue; 
	}
}
void startGame(){
	row = 1;
 39e:	81 e0       	ldi	r24, 0x01	; 1
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <row+0x1>
 3a6:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <row>
	column = 3;
 3aa:	83 e0       	ldi	r24, 0x03	; 3
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 3b2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
	animateGame();
 3b6:	7d cf       	rjmp	.-262    	; 0x2b2 <animateGame>
 3b8:	08 95       	ret

000003ba <main>:
outputs:	
notes:			Looping forever, trashing the HT16K33
Version :    	DMK, Initial code
*******************************************************************/
{
	displayInit();
 3ba:	e4 de       	rcall	.-568    	; 0x184 <displayInit>
	startGame();
 3bc:	f0 df       	rcall	.-32     	; 0x39e <startGame>
 3be:	84 ef       	ldi	r24, 0xF4	; 244
	wait(500);
 3c0:	91 e0       	ldi	r25, 0x01	; 1
 3c2:	e4 de       	rcall	.-568    	; 0x18c <wait>
 3c4:	ff cf       	rjmp	.-2      	; 0x3c4 <main+0xa>

000003c6 <printf>:
 3c6:	cf 93       	push	r28
 3c8:	df 93       	push	r29
 3ca:	cd b7       	in	r28, 0x3d	; 61
 3cc:	de b7       	in	r29, 0x3e	; 62
 3ce:	ae 01       	movw	r20, r28
 3d0:	4b 5f       	subi	r20, 0xFB	; 251
 3d2:	5f 4f       	sbci	r21, 0xFF	; 255
 3d4:	fa 01       	movw	r30, r20
 3d6:	61 91       	ld	r22, Z+
 3d8:	71 91       	ld	r23, Z+
 3da:	af 01       	movw	r20, r30
 3dc:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <__data_end+0x2>
 3e0:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <__data_end+0x3>
 3e4:	03 d0       	rcall	.+6      	; 0x3ec <vfprintf>
 3e6:	df 91       	pop	r29
 3e8:	cf 91       	pop	r28
 3ea:	08 95       	ret

000003ec <vfprintf>:
 3ec:	2f 92       	push	r2
 3ee:	3f 92       	push	r3
 3f0:	4f 92       	push	r4
 3f2:	5f 92       	push	r5
 3f4:	6f 92       	push	r6
 3f6:	7f 92       	push	r7
 3f8:	8f 92       	push	r8
 3fa:	9f 92       	push	r9
 3fc:	af 92       	push	r10
 3fe:	bf 92       	push	r11
 400:	cf 92       	push	r12
 402:	df 92       	push	r13
 404:	ef 92       	push	r14
 406:	ff 92       	push	r15
 408:	0f 93       	push	r16
 40a:	1f 93       	push	r17
 40c:	cf 93       	push	r28
 40e:	df 93       	push	r29
 410:	cd b7       	in	r28, 0x3d	; 61
 412:	de b7       	in	r29, 0x3e	; 62
 414:	2b 97       	sbiw	r28, 0x0b	; 11
 416:	0f b6       	in	r0, 0x3f	; 63
 418:	f8 94       	cli
 41a:	de bf       	out	0x3e, r29	; 62
 41c:	0f be       	out	0x3f, r0	; 63
 41e:	cd bf       	out	0x3d, r28	; 61
 420:	6c 01       	movw	r12, r24
 422:	7b 01       	movw	r14, r22
 424:	8a 01       	movw	r16, r20
 426:	fc 01       	movw	r30, r24
 428:	17 82       	std	Z+7, r1	; 0x07
 42a:	16 82       	std	Z+6, r1	; 0x06
 42c:	83 81       	ldd	r24, Z+3	; 0x03
 42e:	81 ff       	sbrs	r24, 1
 430:	bf c1       	rjmp	.+894    	; 0x7b0 <__LOCK_REGION_LENGTH__+0x3b0>
 432:	ce 01       	movw	r24, r28
 434:	01 96       	adiw	r24, 0x01	; 1
 436:	3c 01       	movw	r6, r24
 438:	f6 01       	movw	r30, r12
 43a:	93 81       	ldd	r25, Z+3	; 0x03
 43c:	f7 01       	movw	r30, r14
 43e:	93 fd       	sbrc	r25, 3
 440:	85 91       	lpm	r24, Z+
 442:	93 ff       	sbrs	r25, 3
 444:	81 91       	ld	r24, Z+
 446:	7f 01       	movw	r14, r30
 448:	88 23       	and	r24, r24
 44a:	09 f4       	brne	.+2      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 44c:	ad c1       	rjmp	.+858    	; 0x7a8 <__LOCK_REGION_LENGTH__+0x3a8>
 44e:	85 32       	cpi	r24, 0x25	; 37
 450:	39 f4       	brne	.+14     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 452:	93 fd       	sbrc	r25, 3
 454:	85 91       	lpm	r24, Z+
 456:	93 ff       	sbrs	r25, 3
 458:	81 91       	ld	r24, Z+
 45a:	7f 01       	movw	r14, r30
 45c:	85 32       	cpi	r24, 0x25	; 37
 45e:	21 f4       	brne	.+8      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 460:	b6 01       	movw	r22, r12
 462:	90 e0       	ldi	r25, 0x00	; 0
 464:	d6 d1       	rcall	.+940    	; 0x812 <fputc>
 466:	e8 cf       	rjmp	.-48     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 468:	91 2c       	mov	r9, r1
 46a:	21 2c       	mov	r2, r1
 46c:	31 2c       	mov	r3, r1
 46e:	ff e1       	ldi	r31, 0x1F	; 31
 470:	f3 15       	cp	r31, r3
 472:	d8 f0       	brcs	.+54     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 474:	8b 32       	cpi	r24, 0x2B	; 43
 476:	79 f0       	breq	.+30     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 478:	38 f4       	brcc	.+14     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 47a:	80 32       	cpi	r24, 0x20	; 32
 47c:	79 f0       	breq	.+30     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 47e:	83 32       	cpi	r24, 0x23	; 35
 480:	a1 f4       	brne	.+40     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 482:	23 2d       	mov	r18, r3
 484:	20 61       	ori	r18, 0x10	; 16
 486:	1d c0       	rjmp	.+58     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 488:	8d 32       	cpi	r24, 0x2D	; 45
 48a:	61 f0       	breq	.+24     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 48c:	80 33       	cpi	r24, 0x30	; 48
 48e:	69 f4       	brne	.+26     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 490:	23 2d       	mov	r18, r3
 492:	21 60       	ori	r18, 0x01	; 1
 494:	16 c0       	rjmp	.+44     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 496:	83 2d       	mov	r24, r3
 498:	82 60       	ori	r24, 0x02	; 2
 49a:	38 2e       	mov	r3, r24
 49c:	e3 2d       	mov	r30, r3
 49e:	e4 60       	ori	r30, 0x04	; 4
 4a0:	3e 2e       	mov	r3, r30
 4a2:	2a c0       	rjmp	.+84     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4a4:	f3 2d       	mov	r31, r3
 4a6:	f8 60       	ori	r31, 0x08	; 8
 4a8:	1d c0       	rjmp	.+58     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4aa:	37 fc       	sbrc	r3, 7
 4ac:	2d c0       	rjmp	.+90     	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 4ae:	20 ed       	ldi	r18, 0xD0	; 208
 4b0:	28 0f       	add	r18, r24
 4b2:	2a 30       	cpi	r18, 0x0A	; 10
 4b4:	40 f0       	brcs	.+16     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4b6:	8e 32       	cpi	r24, 0x2E	; 46
 4b8:	b9 f4       	brne	.+46     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4ba:	36 fc       	sbrc	r3, 6
 4bc:	75 c1       	rjmp	.+746    	; 0x7a8 <__LOCK_REGION_LENGTH__+0x3a8>
 4be:	23 2d       	mov	r18, r3
 4c0:	20 64       	ori	r18, 0x40	; 64
 4c2:	32 2e       	mov	r3, r18
 4c4:	19 c0       	rjmp	.+50     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4c6:	36 fe       	sbrs	r3, 6
 4c8:	06 c0       	rjmp	.+12     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4ca:	8a e0       	ldi	r24, 0x0A	; 10
 4cc:	98 9e       	mul	r9, r24
 4ce:	20 0d       	add	r18, r0
 4d0:	11 24       	eor	r1, r1
 4d2:	92 2e       	mov	r9, r18
 4d4:	11 c0       	rjmp	.+34     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4d6:	ea e0       	ldi	r30, 0x0A	; 10
 4d8:	2e 9e       	mul	r2, r30
 4da:	20 0d       	add	r18, r0
 4dc:	11 24       	eor	r1, r1
 4de:	22 2e       	mov	r2, r18
 4e0:	f3 2d       	mov	r31, r3
 4e2:	f0 62       	ori	r31, 0x20	; 32
 4e4:	3f 2e       	mov	r3, r31
 4e6:	08 c0       	rjmp	.+16     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4e8:	8c 36       	cpi	r24, 0x6C	; 108
 4ea:	21 f4       	brne	.+8      	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4ec:	83 2d       	mov	r24, r3
 4ee:	80 68       	ori	r24, 0x80	; 128
 4f0:	38 2e       	mov	r3, r24
 4f2:	02 c0       	rjmp	.+4      	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4f4:	88 36       	cpi	r24, 0x68	; 104
 4f6:	41 f4       	brne	.+16     	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 4f8:	f7 01       	movw	r30, r14
 4fa:	93 fd       	sbrc	r25, 3
 4fc:	85 91       	lpm	r24, Z+
 4fe:	93 ff       	sbrs	r25, 3
 500:	81 91       	ld	r24, Z+
 502:	7f 01       	movw	r14, r30
 504:	81 11       	cpse	r24, r1
 506:	b3 cf       	rjmp	.-154    	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 508:	98 2f       	mov	r25, r24
 50a:	9f 7d       	andi	r25, 0xDF	; 223
 50c:	95 54       	subi	r25, 0x45	; 69
 50e:	93 30       	cpi	r25, 0x03	; 3
 510:	28 f4       	brcc	.+10     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 512:	0c 5f       	subi	r16, 0xFC	; 252
 514:	1f 4f       	sbci	r17, 0xFF	; 255
 516:	9f e3       	ldi	r25, 0x3F	; 63
 518:	99 83       	std	Y+1, r25	; 0x01
 51a:	0d c0       	rjmp	.+26     	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 51c:	83 36       	cpi	r24, 0x63	; 99
 51e:	31 f0       	breq	.+12     	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 520:	83 37       	cpi	r24, 0x73	; 115
 522:	71 f0       	breq	.+28     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 524:	83 35       	cpi	r24, 0x53	; 83
 526:	09 f0       	breq	.+2      	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 528:	55 c0       	rjmp	.+170    	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
 52a:	20 c0       	rjmp	.+64     	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 52c:	f8 01       	movw	r30, r16
 52e:	80 81       	ld	r24, Z
 530:	89 83       	std	Y+1, r24	; 0x01
 532:	0e 5f       	subi	r16, 0xFE	; 254
 534:	1f 4f       	sbci	r17, 0xFF	; 255
 536:	88 24       	eor	r8, r8
 538:	83 94       	inc	r8
 53a:	91 2c       	mov	r9, r1
 53c:	53 01       	movw	r10, r6
 53e:	12 c0       	rjmp	.+36     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 540:	28 01       	movw	r4, r16
 542:	f2 e0       	ldi	r31, 0x02	; 2
 544:	4f 0e       	add	r4, r31
 546:	51 1c       	adc	r5, r1
 548:	f8 01       	movw	r30, r16
 54a:	a0 80       	ld	r10, Z
 54c:	b1 80       	ldd	r11, Z+1	; 0x01
 54e:	36 fe       	sbrs	r3, 6
 550:	03 c0       	rjmp	.+6      	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 552:	69 2d       	mov	r22, r9
 554:	70 e0       	ldi	r23, 0x00	; 0
 556:	02 c0       	rjmp	.+4      	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 558:	6f ef       	ldi	r22, 0xFF	; 255
 55a:	7f ef       	ldi	r23, 0xFF	; 255
 55c:	c5 01       	movw	r24, r10
 55e:	4e d1       	rcall	.+668    	; 0x7fc <strnlen>
 560:	4c 01       	movw	r8, r24
 562:	82 01       	movw	r16, r4
 564:	f3 2d       	mov	r31, r3
 566:	ff 77       	andi	r31, 0x7F	; 127
 568:	3f 2e       	mov	r3, r31
 56a:	15 c0       	rjmp	.+42     	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 56c:	28 01       	movw	r4, r16
 56e:	22 e0       	ldi	r18, 0x02	; 2
 570:	42 0e       	add	r4, r18
 572:	51 1c       	adc	r5, r1
 574:	f8 01       	movw	r30, r16
 576:	a0 80       	ld	r10, Z
 578:	b1 80       	ldd	r11, Z+1	; 0x01
 57a:	36 fe       	sbrs	r3, 6
 57c:	03 c0       	rjmp	.+6      	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
 57e:	69 2d       	mov	r22, r9
 580:	70 e0       	ldi	r23, 0x00	; 0
 582:	02 c0       	rjmp	.+4      	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 584:	6f ef       	ldi	r22, 0xFF	; 255
 586:	7f ef       	ldi	r23, 0xFF	; 255
 588:	c5 01       	movw	r24, r10
 58a:	2d d1       	rcall	.+602    	; 0x7e6 <strnlen_P>
 58c:	4c 01       	movw	r8, r24
 58e:	f3 2d       	mov	r31, r3
 590:	f0 68       	ori	r31, 0x80	; 128
 592:	3f 2e       	mov	r3, r31
 594:	82 01       	movw	r16, r4
 596:	33 fc       	sbrc	r3, 3
 598:	19 c0       	rjmp	.+50     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 59a:	82 2d       	mov	r24, r2
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	88 16       	cp	r8, r24
 5a0:	99 06       	cpc	r9, r25
 5a2:	a0 f4       	brcc	.+40     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5a4:	b6 01       	movw	r22, r12
 5a6:	80 e2       	ldi	r24, 0x20	; 32
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	33 d1       	rcall	.+614    	; 0x812 <fputc>
 5ac:	2a 94       	dec	r2
 5ae:	f5 cf       	rjmp	.-22     	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
 5b0:	f5 01       	movw	r30, r10
 5b2:	37 fc       	sbrc	r3, 7
 5b4:	85 91       	lpm	r24, Z+
 5b6:	37 fe       	sbrs	r3, 7
 5b8:	81 91       	ld	r24, Z+
 5ba:	5f 01       	movw	r10, r30
 5bc:	b6 01       	movw	r22, r12
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	28 d1       	rcall	.+592    	; 0x812 <fputc>
 5c2:	21 10       	cpse	r2, r1
 5c4:	2a 94       	dec	r2
 5c6:	21 e0       	ldi	r18, 0x01	; 1
 5c8:	82 1a       	sub	r8, r18
 5ca:	91 08       	sbc	r9, r1
 5cc:	81 14       	cp	r8, r1
 5ce:	91 04       	cpc	r9, r1
 5d0:	79 f7       	brne	.-34     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5d2:	e1 c0       	rjmp	.+450    	; 0x796 <__LOCK_REGION_LENGTH__+0x396>
 5d4:	84 36       	cpi	r24, 0x64	; 100
 5d6:	11 f0       	breq	.+4      	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 5d8:	89 36       	cpi	r24, 0x69	; 105
 5da:	39 f5       	brne	.+78     	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 5dc:	f8 01       	movw	r30, r16
 5de:	37 fe       	sbrs	r3, 7
 5e0:	07 c0       	rjmp	.+14     	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 5e2:	60 81       	ld	r22, Z
 5e4:	71 81       	ldd	r23, Z+1	; 0x01
 5e6:	82 81       	ldd	r24, Z+2	; 0x02
 5e8:	93 81       	ldd	r25, Z+3	; 0x03
 5ea:	0c 5f       	subi	r16, 0xFC	; 252
 5ec:	1f 4f       	sbci	r17, 0xFF	; 255
 5ee:	08 c0       	rjmp	.+16     	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 5f0:	60 81       	ld	r22, Z
 5f2:	71 81       	ldd	r23, Z+1	; 0x01
 5f4:	07 2e       	mov	r0, r23
 5f6:	00 0c       	add	r0, r0
 5f8:	88 0b       	sbc	r24, r24
 5fa:	99 0b       	sbc	r25, r25
 5fc:	0e 5f       	subi	r16, 0xFE	; 254
 5fe:	1f 4f       	sbci	r17, 0xFF	; 255
 600:	f3 2d       	mov	r31, r3
 602:	ff 76       	andi	r31, 0x6F	; 111
 604:	3f 2e       	mov	r3, r31
 606:	97 ff       	sbrs	r25, 7
 608:	09 c0       	rjmp	.+18     	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
 60a:	90 95       	com	r25
 60c:	80 95       	com	r24
 60e:	70 95       	com	r23
 610:	61 95       	neg	r22
 612:	7f 4f       	sbci	r23, 0xFF	; 255
 614:	8f 4f       	sbci	r24, 0xFF	; 255
 616:	9f 4f       	sbci	r25, 0xFF	; 255
 618:	f0 68       	ori	r31, 0x80	; 128
 61a:	3f 2e       	mov	r3, r31
 61c:	2a e0       	ldi	r18, 0x0A	; 10
 61e:	30 e0       	ldi	r19, 0x00	; 0
 620:	a3 01       	movw	r20, r6
 622:	33 d1       	rcall	.+614    	; 0x88a <__ultoa_invert>
 624:	88 2e       	mov	r8, r24
 626:	86 18       	sub	r8, r6
 628:	44 c0       	rjmp	.+136    	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 62a:	85 37       	cpi	r24, 0x75	; 117
 62c:	31 f4       	brne	.+12     	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
 62e:	23 2d       	mov	r18, r3
 630:	2f 7e       	andi	r18, 0xEF	; 239
 632:	b2 2e       	mov	r11, r18
 634:	2a e0       	ldi	r18, 0x0A	; 10
 636:	30 e0       	ldi	r19, 0x00	; 0
 638:	25 c0       	rjmp	.+74     	; 0x684 <__LOCK_REGION_LENGTH__+0x284>
 63a:	93 2d       	mov	r25, r3
 63c:	99 7f       	andi	r25, 0xF9	; 249
 63e:	b9 2e       	mov	r11, r25
 640:	8f 36       	cpi	r24, 0x6F	; 111
 642:	c1 f0       	breq	.+48     	; 0x674 <__LOCK_REGION_LENGTH__+0x274>
 644:	18 f4       	brcc	.+6      	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 646:	88 35       	cpi	r24, 0x58	; 88
 648:	79 f0       	breq	.+30     	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 64a:	ae c0       	rjmp	.+348    	; 0x7a8 <__LOCK_REGION_LENGTH__+0x3a8>
 64c:	80 37       	cpi	r24, 0x70	; 112
 64e:	19 f0       	breq	.+6      	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 650:	88 37       	cpi	r24, 0x78	; 120
 652:	21 f0       	breq	.+8      	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 654:	a9 c0       	rjmp	.+338    	; 0x7a8 <__LOCK_REGION_LENGTH__+0x3a8>
 656:	e9 2f       	mov	r30, r25
 658:	e0 61       	ori	r30, 0x10	; 16
 65a:	be 2e       	mov	r11, r30
 65c:	b4 fe       	sbrs	r11, 4
 65e:	0d c0       	rjmp	.+26     	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
 660:	fb 2d       	mov	r31, r11
 662:	f4 60       	ori	r31, 0x04	; 4
 664:	bf 2e       	mov	r11, r31
 666:	09 c0       	rjmp	.+18     	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
 668:	34 fe       	sbrs	r3, 4
 66a:	0a c0       	rjmp	.+20     	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 66c:	29 2f       	mov	r18, r25
 66e:	26 60       	ori	r18, 0x06	; 6
 670:	b2 2e       	mov	r11, r18
 672:	06 c0       	rjmp	.+12     	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 674:	28 e0       	ldi	r18, 0x08	; 8
 676:	30 e0       	ldi	r19, 0x00	; 0
 678:	05 c0       	rjmp	.+10     	; 0x684 <__LOCK_REGION_LENGTH__+0x284>
 67a:	20 e1       	ldi	r18, 0x10	; 16
 67c:	30 e0       	ldi	r19, 0x00	; 0
 67e:	02 c0       	rjmp	.+4      	; 0x684 <__LOCK_REGION_LENGTH__+0x284>
 680:	20 e1       	ldi	r18, 0x10	; 16
 682:	32 e0       	ldi	r19, 0x02	; 2
 684:	f8 01       	movw	r30, r16
 686:	b7 fe       	sbrs	r11, 7
 688:	07 c0       	rjmp	.+14     	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
 68a:	60 81       	ld	r22, Z
 68c:	71 81       	ldd	r23, Z+1	; 0x01
 68e:	82 81       	ldd	r24, Z+2	; 0x02
 690:	93 81       	ldd	r25, Z+3	; 0x03
 692:	0c 5f       	subi	r16, 0xFC	; 252
 694:	1f 4f       	sbci	r17, 0xFF	; 255
 696:	06 c0       	rjmp	.+12     	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
 698:	60 81       	ld	r22, Z
 69a:	71 81       	ldd	r23, Z+1	; 0x01
 69c:	80 e0       	ldi	r24, 0x00	; 0
 69e:	90 e0       	ldi	r25, 0x00	; 0
 6a0:	0e 5f       	subi	r16, 0xFE	; 254
 6a2:	1f 4f       	sbci	r17, 0xFF	; 255
 6a4:	a3 01       	movw	r20, r6
 6a6:	f1 d0       	rcall	.+482    	; 0x88a <__ultoa_invert>
 6a8:	88 2e       	mov	r8, r24
 6aa:	86 18       	sub	r8, r6
 6ac:	fb 2d       	mov	r31, r11
 6ae:	ff 77       	andi	r31, 0x7F	; 127
 6b0:	3f 2e       	mov	r3, r31
 6b2:	36 fe       	sbrs	r3, 6
 6b4:	0d c0       	rjmp	.+26     	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 6b6:	23 2d       	mov	r18, r3
 6b8:	2e 7f       	andi	r18, 0xFE	; 254
 6ba:	a2 2e       	mov	r10, r18
 6bc:	89 14       	cp	r8, r9
 6be:	58 f4       	brcc	.+22     	; 0x6d6 <__LOCK_REGION_LENGTH__+0x2d6>
 6c0:	34 fe       	sbrs	r3, 4
 6c2:	0b c0       	rjmp	.+22     	; 0x6da <__LOCK_REGION_LENGTH__+0x2da>
 6c4:	32 fc       	sbrc	r3, 2
 6c6:	09 c0       	rjmp	.+18     	; 0x6da <__LOCK_REGION_LENGTH__+0x2da>
 6c8:	83 2d       	mov	r24, r3
 6ca:	8e 7e       	andi	r24, 0xEE	; 238
 6cc:	a8 2e       	mov	r10, r24
 6ce:	05 c0       	rjmp	.+10     	; 0x6da <__LOCK_REGION_LENGTH__+0x2da>
 6d0:	b8 2c       	mov	r11, r8
 6d2:	a3 2c       	mov	r10, r3
 6d4:	03 c0       	rjmp	.+6      	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
 6d6:	b8 2c       	mov	r11, r8
 6d8:	01 c0       	rjmp	.+2      	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
 6da:	b9 2c       	mov	r11, r9
 6dc:	a4 fe       	sbrs	r10, 4
 6de:	0f c0       	rjmp	.+30     	; 0x6fe <__LOCK_REGION_LENGTH__+0x2fe>
 6e0:	fe 01       	movw	r30, r28
 6e2:	e8 0d       	add	r30, r8
 6e4:	f1 1d       	adc	r31, r1
 6e6:	80 81       	ld	r24, Z
 6e8:	80 33       	cpi	r24, 0x30	; 48
 6ea:	21 f4       	brne	.+8      	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
 6ec:	9a 2d       	mov	r25, r10
 6ee:	99 7e       	andi	r25, 0xE9	; 233
 6f0:	a9 2e       	mov	r10, r25
 6f2:	09 c0       	rjmp	.+18     	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
 6f4:	a2 fe       	sbrs	r10, 2
 6f6:	06 c0       	rjmp	.+12     	; 0x704 <__LOCK_REGION_LENGTH__+0x304>
 6f8:	b3 94       	inc	r11
 6fa:	b3 94       	inc	r11
 6fc:	04 c0       	rjmp	.+8      	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
 6fe:	8a 2d       	mov	r24, r10
 700:	86 78       	andi	r24, 0x86	; 134
 702:	09 f0       	breq	.+2      	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
 704:	b3 94       	inc	r11
 706:	a3 fc       	sbrc	r10, 3
 708:	10 c0       	rjmp	.+32     	; 0x72a <__LOCK_REGION_LENGTH__+0x32a>
 70a:	a0 fe       	sbrs	r10, 0
 70c:	06 c0       	rjmp	.+12     	; 0x71a <__LOCK_REGION_LENGTH__+0x31a>
 70e:	b2 14       	cp	r11, r2
 710:	80 f4       	brcc	.+32     	; 0x732 <__LOCK_REGION_LENGTH__+0x332>
 712:	28 0c       	add	r2, r8
 714:	92 2c       	mov	r9, r2
 716:	9b 18       	sub	r9, r11
 718:	0d c0       	rjmp	.+26     	; 0x734 <__LOCK_REGION_LENGTH__+0x334>
 71a:	b2 14       	cp	r11, r2
 71c:	58 f4       	brcc	.+22     	; 0x734 <__LOCK_REGION_LENGTH__+0x334>
 71e:	b6 01       	movw	r22, r12
 720:	80 e2       	ldi	r24, 0x20	; 32
 722:	90 e0       	ldi	r25, 0x00	; 0
 724:	76 d0       	rcall	.+236    	; 0x812 <fputc>
 726:	b3 94       	inc	r11
 728:	f8 cf       	rjmp	.-16     	; 0x71a <__LOCK_REGION_LENGTH__+0x31a>
 72a:	b2 14       	cp	r11, r2
 72c:	18 f4       	brcc	.+6      	; 0x734 <__LOCK_REGION_LENGTH__+0x334>
 72e:	2b 18       	sub	r2, r11
 730:	02 c0       	rjmp	.+4      	; 0x736 <__LOCK_REGION_LENGTH__+0x336>
 732:	98 2c       	mov	r9, r8
 734:	21 2c       	mov	r2, r1
 736:	a4 fe       	sbrs	r10, 4
 738:	0f c0       	rjmp	.+30     	; 0x758 <__LOCK_REGION_LENGTH__+0x358>
 73a:	b6 01       	movw	r22, r12
 73c:	80 e3       	ldi	r24, 0x30	; 48
 73e:	90 e0       	ldi	r25, 0x00	; 0
 740:	68 d0       	rcall	.+208    	; 0x812 <fputc>
 742:	a2 fe       	sbrs	r10, 2
 744:	16 c0       	rjmp	.+44     	; 0x772 <__LOCK_REGION_LENGTH__+0x372>
 746:	a1 fc       	sbrc	r10, 1
 748:	03 c0       	rjmp	.+6      	; 0x750 <__LOCK_REGION_LENGTH__+0x350>
 74a:	88 e7       	ldi	r24, 0x78	; 120
 74c:	90 e0       	ldi	r25, 0x00	; 0
 74e:	02 c0       	rjmp	.+4      	; 0x754 <__LOCK_REGION_LENGTH__+0x354>
 750:	88 e5       	ldi	r24, 0x58	; 88
 752:	90 e0       	ldi	r25, 0x00	; 0
 754:	b6 01       	movw	r22, r12
 756:	0c c0       	rjmp	.+24     	; 0x770 <__LOCK_REGION_LENGTH__+0x370>
 758:	8a 2d       	mov	r24, r10
 75a:	86 78       	andi	r24, 0x86	; 134
 75c:	51 f0       	breq	.+20     	; 0x772 <__LOCK_REGION_LENGTH__+0x372>
 75e:	a1 fe       	sbrs	r10, 1
 760:	02 c0       	rjmp	.+4      	; 0x766 <__LOCK_REGION_LENGTH__+0x366>
 762:	8b e2       	ldi	r24, 0x2B	; 43
 764:	01 c0       	rjmp	.+2      	; 0x768 <__LOCK_REGION_LENGTH__+0x368>
 766:	80 e2       	ldi	r24, 0x20	; 32
 768:	a7 fc       	sbrc	r10, 7
 76a:	8d e2       	ldi	r24, 0x2D	; 45
 76c:	b6 01       	movw	r22, r12
 76e:	90 e0       	ldi	r25, 0x00	; 0
 770:	50 d0       	rcall	.+160    	; 0x812 <fputc>
 772:	89 14       	cp	r8, r9
 774:	30 f4       	brcc	.+12     	; 0x782 <__LOCK_REGION_LENGTH__+0x382>
 776:	b6 01       	movw	r22, r12
 778:	80 e3       	ldi	r24, 0x30	; 48
 77a:	90 e0       	ldi	r25, 0x00	; 0
 77c:	4a d0       	rcall	.+148    	; 0x812 <fputc>
 77e:	9a 94       	dec	r9
 780:	f8 cf       	rjmp	.-16     	; 0x772 <__LOCK_REGION_LENGTH__+0x372>
 782:	8a 94       	dec	r8
 784:	f3 01       	movw	r30, r6
 786:	e8 0d       	add	r30, r8
 788:	f1 1d       	adc	r31, r1
 78a:	80 81       	ld	r24, Z
 78c:	b6 01       	movw	r22, r12
 78e:	90 e0       	ldi	r25, 0x00	; 0
 790:	40 d0       	rcall	.+128    	; 0x812 <fputc>
 792:	81 10       	cpse	r8, r1
 794:	f6 cf       	rjmp	.-20     	; 0x782 <__LOCK_REGION_LENGTH__+0x382>
 796:	22 20       	and	r2, r2
 798:	09 f4       	brne	.+2      	; 0x79c <__LOCK_REGION_LENGTH__+0x39c>
 79a:	4e ce       	rjmp	.-868    	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 79c:	b6 01       	movw	r22, r12
 79e:	80 e2       	ldi	r24, 0x20	; 32
 7a0:	90 e0       	ldi	r25, 0x00	; 0
 7a2:	37 d0       	rcall	.+110    	; 0x812 <fputc>
 7a4:	2a 94       	dec	r2
 7a6:	f7 cf       	rjmp	.-18     	; 0x796 <__LOCK_REGION_LENGTH__+0x396>
 7a8:	f6 01       	movw	r30, r12
 7aa:	86 81       	ldd	r24, Z+6	; 0x06
 7ac:	97 81       	ldd	r25, Z+7	; 0x07
 7ae:	02 c0       	rjmp	.+4      	; 0x7b4 <__LOCK_REGION_LENGTH__+0x3b4>
 7b0:	8f ef       	ldi	r24, 0xFF	; 255
 7b2:	9f ef       	ldi	r25, 0xFF	; 255
 7b4:	2b 96       	adiw	r28, 0x0b	; 11
 7b6:	0f b6       	in	r0, 0x3f	; 63
 7b8:	f8 94       	cli
 7ba:	de bf       	out	0x3e, r29	; 62
 7bc:	0f be       	out	0x3f, r0	; 63
 7be:	cd bf       	out	0x3d, r28	; 61
 7c0:	df 91       	pop	r29
 7c2:	cf 91       	pop	r28
 7c4:	1f 91       	pop	r17
 7c6:	0f 91       	pop	r16
 7c8:	ff 90       	pop	r15
 7ca:	ef 90       	pop	r14
 7cc:	df 90       	pop	r13
 7ce:	cf 90       	pop	r12
 7d0:	bf 90       	pop	r11
 7d2:	af 90       	pop	r10
 7d4:	9f 90       	pop	r9
 7d6:	8f 90       	pop	r8
 7d8:	7f 90       	pop	r7
 7da:	6f 90       	pop	r6
 7dc:	5f 90       	pop	r5
 7de:	4f 90       	pop	r4
 7e0:	3f 90       	pop	r3
 7e2:	2f 90       	pop	r2
 7e4:	08 95       	ret

000007e6 <strnlen_P>:
 7e6:	fc 01       	movw	r30, r24
 7e8:	05 90       	lpm	r0, Z+
 7ea:	61 50       	subi	r22, 0x01	; 1
 7ec:	70 40       	sbci	r23, 0x00	; 0
 7ee:	01 10       	cpse	r0, r1
 7f0:	d8 f7       	brcc	.-10     	; 0x7e8 <strnlen_P+0x2>
 7f2:	80 95       	com	r24
 7f4:	90 95       	com	r25
 7f6:	8e 0f       	add	r24, r30
 7f8:	9f 1f       	adc	r25, r31
 7fa:	08 95       	ret

000007fc <strnlen>:
 7fc:	fc 01       	movw	r30, r24
 7fe:	61 50       	subi	r22, 0x01	; 1
 800:	70 40       	sbci	r23, 0x00	; 0
 802:	01 90       	ld	r0, Z+
 804:	01 10       	cpse	r0, r1
 806:	d8 f7       	brcc	.-10     	; 0x7fe <strnlen+0x2>
 808:	80 95       	com	r24
 80a:	90 95       	com	r25
 80c:	8e 0f       	add	r24, r30
 80e:	9f 1f       	adc	r25, r31
 810:	08 95       	ret

00000812 <fputc>:
 812:	0f 93       	push	r16
 814:	1f 93       	push	r17
 816:	cf 93       	push	r28
 818:	df 93       	push	r29
 81a:	fb 01       	movw	r30, r22
 81c:	23 81       	ldd	r18, Z+3	; 0x03
 81e:	21 fd       	sbrc	r18, 1
 820:	03 c0       	rjmp	.+6      	; 0x828 <fputc+0x16>
 822:	8f ef       	ldi	r24, 0xFF	; 255
 824:	9f ef       	ldi	r25, 0xFF	; 255
 826:	2c c0       	rjmp	.+88     	; 0x880 <fputc+0x6e>
 828:	22 ff       	sbrs	r18, 2
 82a:	16 c0       	rjmp	.+44     	; 0x858 <fputc+0x46>
 82c:	46 81       	ldd	r20, Z+6	; 0x06
 82e:	57 81       	ldd	r21, Z+7	; 0x07
 830:	24 81       	ldd	r18, Z+4	; 0x04
 832:	35 81       	ldd	r19, Z+5	; 0x05
 834:	42 17       	cp	r20, r18
 836:	53 07       	cpc	r21, r19
 838:	44 f4       	brge	.+16     	; 0x84a <fputc+0x38>
 83a:	a0 81       	ld	r26, Z
 83c:	b1 81       	ldd	r27, Z+1	; 0x01
 83e:	9d 01       	movw	r18, r26
 840:	2f 5f       	subi	r18, 0xFF	; 255
 842:	3f 4f       	sbci	r19, 0xFF	; 255
 844:	31 83       	std	Z+1, r19	; 0x01
 846:	20 83       	st	Z, r18
 848:	8c 93       	st	X, r24
 84a:	26 81       	ldd	r18, Z+6	; 0x06
 84c:	37 81       	ldd	r19, Z+7	; 0x07
 84e:	2f 5f       	subi	r18, 0xFF	; 255
 850:	3f 4f       	sbci	r19, 0xFF	; 255
 852:	37 83       	std	Z+7, r19	; 0x07
 854:	26 83       	std	Z+6, r18	; 0x06
 856:	14 c0       	rjmp	.+40     	; 0x880 <fputc+0x6e>
 858:	8b 01       	movw	r16, r22
 85a:	ec 01       	movw	r28, r24
 85c:	fb 01       	movw	r30, r22
 85e:	00 84       	ldd	r0, Z+8	; 0x08
 860:	f1 85       	ldd	r31, Z+9	; 0x09
 862:	e0 2d       	mov	r30, r0
 864:	09 95       	icall
 866:	89 2b       	or	r24, r25
 868:	e1 f6       	brne	.-72     	; 0x822 <fputc+0x10>
 86a:	d8 01       	movw	r26, r16
 86c:	16 96       	adiw	r26, 0x06	; 6
 86e:	8d 91       	ld	r24, X+
 870:	9c 91       	ld	r25, X
 872:	17 97       	sbiw	r26, 0x07	; 7
 874:	01 96       	adiw	r24, 0x01	; 1
 876:	17 96       	adiw	r26, 0x07	; 7
 878:	9c 93       	st	X, r25
 87a:	8e 93       	st	-X, r24
 87c:	16 97       	sbiw	r26, 0x06	; 6
 87e:	ce 01       	movw	r24, r28
 880:	df 91       	pop	r29
 882:	cf 91       	pop	r28
 884:	1f 91       	pop	r17
 886:	0f 91       	pop	r16
 888:	08 95       	ret

0000088a <__ultoa_invert>:
 88a:	fa 01       	movw	r30, r20
 88c:	aa 27       	eor	r26, r26
 88e:	28 30       	cpi	r18, 0x08	; 8
 890:	51 f1       	breq	.+84     	; 0x8e6 <__ultoa_invert+0x5c>
 892:	20 31       	cpi	r18, 0x10	; 16
 894:	81 f1       	breq	.+96     	; 0x8f6 <__ultoa_invert+0x6c>
 896:	e8 94       	clt
 898:	6f 93       	push	r22
 89a:	6e 7f       	andi	r22, 0xFE	; 254
 89c:	6e 5f       	subi	r22, 0xFE	; 254
 89e:	7f 4f       	sbci	r23, 0xFF	; 255
 8a0:	8f 4f       	sbci	r24, 0xFF	; 255
 8a2:	9f 4f       	sbci	r25, 0xFF	; 255
 8a4:	af 4f       	sbci	r26, 0xFF	; 255
 8a6:	b1 e0       	ldi	r27, 0x01	; 1
 8a8:	3e d0       	rcall	.+124    	; 0x926 <__ultoa_invert+0x9c>
 8aa:	b4 e0       	ldi	r27, 0x04	; 4
 8ac:	3c d0       	rcall	.+120    	; 0x926 <__ultoa_invert+0x9c>
 8ae:	67 0f       	add	r22, r23
 8b0:	78 1f       	adc	r23, r24
 8b2:	89 1f       	adc	r24, r25
 8b4:	9a 1f       	adc	r25, r26
 8b6:	a1 1d       	adc	r26, r1
 8b8:	68 0f       	add	r22, r24
 8ba:	79 1f       	adc	r23, r25
 8bc:	8a 1f       	adc	r24, r26
 8be:	91 1d       	adc	r25, r1
 8c0:	a1 1d       	adc	r26, r1
 8c2:	6a 0f       	add	r22, r26
 8c4:	71 1d       	adc	r23, r1
 8c6:	81 1d       	adc	r24, r1
 8c8:	91 1d       	adc	r25, r1
 8ca:	a1 1d       	adc	r26, r1
 8cc:	20 d0       	rcall	.+64     	; 0x90e <__ultoa_invert+0x84>
 8ce:	09 f4       	brne	.+2      	; 0x8d2 <__ultoa_invert+0x48>
 8d0:	68 94       	set
 8d2:	3f 91       	pop	r19
 8d4:	2a e0       	ldi	r18, 0x0A	; 10
 8d6:	26 9f       	mul	r18, r22
 8d8:	11 24       	eor	r1, r1
 8da:	30 19       	sub	r19, r0
 8dc:	30 5d       	subi	r19, 0xD0	; 208
 8de:	31 93       	st	Z+, r19
 8e0:	de f6       	brtc	.-74     	; 0x898 <__ultoa_invert+0xe>
 8e2:	cf 01       	movw	r24, r30
 8e4:	08 95       	ret
 8e6:	46 2f       	mov	r20, r22
 8e8:	47 70       	andi	r20, 0x07	; 7
 8ea:	40 5d       	subi	r20, 0xD0	; 208
 8ec:	41 93       	st	Z+, r20
 8ee:	b3 e0       	ldi	r27, 0x03	; 3
 8f0:	0f d0       	rcall	.+30     	; 0x910 <__ultoa_invert+0x86>
 8f2:	c9 f7       	brne	.-14     	; 0x8e6 <__ultoa_invert+0x5c>
 8f4:	f6 cf       	rjmp	.-20     	; 0x8e2 <__ultoa_invert+0x58>
 8f6:	46 2f       	mov	r20, r22
 8f8:	4f 70       	andi	r20, 0x0F	; 15
 8fa:	40 5d       	subi	r20, 0xD0	; 208
 8fc:	4a 33       	cpi	r20, 0x3A	; 58
 8fe:	18 f0       	brcs	.+6      	; 0x906 <__ultoa_invert+0x7c>
 900:	49 5d       	subi	r20, 0xD9	; 217
 902:	31 fd       	sbrc	r19, 1
 904:	40 52       	subi	r20, 0x20	; 32
 906:	41 93       	st	Z+, r20
 908:	02 d0       	rcall	.+4      	; 0x90e <__ultoa_invert+0x84>
 90a:	a9 f7       	brne	.-22     	; 0x8f6 <__ultoa_invert+0x6c>
 90c:	ea cf       	rjmp	.-44     	; 0x8e2 <__ultoa_invert+0x58>
 90e:	b4 e0       	ldi	r27, 0x04	; 4
 910:	a6 95       	lsr	r26
 912:	97 95       	ror	r25
 914:	87 95       	ror	r24
 916:	77 95       	ror	r23
 918:	67 95       	ror	r22
 91a:	ba 95       	dec	r27
 91c:	c9 f7       	brne	.-14     	; 0x910 <__ultoa_invert+0x86>
 91e:	00 97       	sbiw	r24, 0x00	; 0
 920:	61 05       	cpc	r22, r1
 922:	71 05       	cpc	r23, r1
 924:	08 95       	ret
 926:	9b 01       	movw	r18, r22
 928:	ac 01       	movw	r20, r24
 92a:	0a 2e       	mov	r0, r26
 92c:	06 94       	lsr	r0
 92e:	57 95       	ror	r21
 930:	47 95       	ror	r20
 932:	37 95       	ror	r19
 934:	27 95       	ror	r18
 936:	ba 95       	dec	r27
 938:	c9 f7       	brne	.-14     	; 0x92c <__ultoa_invert+0xa2>
 93a:	62 0f       	add	r22, r18
 93c:	73 1f       	adc	r23, r19
 93e:	84 1f       	adc	r24, r20
 940:	95 1f       	adc	r25, r21
 942:	a0 1d       	adc	r26, r0
 944:	08 95       	ret

00000946 <_exit>:
 946:	f8 94       	cli

00000948 <__stop_program>:
 948:	ff cf       	rjmp	.-2      	; 0x948 <__stop_program>
